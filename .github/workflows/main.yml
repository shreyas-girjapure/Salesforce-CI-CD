# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
                  # Cache node_modules to speed up the process
      - name: 'Restore node_modules cache'
        id: cache-npm
        uses: actions/cache@v1
        with:
            path: node_modules
            key: npm-${{ hashFiles('**/package-lock.json') }}
            restore-keys: |
                npm-${{ env.cache-name }}-
                npm-
      # Install npm dependencies for Prettier and Jest
      - name: 'Install npm dependencies'
        if: steps.cache-npm.outputs.cache-hit != 'true'
        run: npm ci

      # Start local Apex parser server for Prettier
      - name: 'Start local Apex parser server for Prettier'
        run: npm run apex:local:start &

      # Wait for Apex parser server startup
      - name: 'Wait for Apex parser server startup'
        run: timeout 30 bash -c 'until printf "" 2>>/dev/null >>/dev/tcp/$0/$1; do sleep 1; done' 127.0.0.1 2117

      # Prettier formatting
      - name: 'Code formatting verification with Prettier'
        run: npm run prettier:verify:apex:local

      # Stop local Apex parser server for Prettier
      - name: 'Stop local Apex parser server for Prettier'
        if: always()
        run: npm run apex:local:stop

      # Lint LWC
      - name: 'Lint Lightning Web Components'
        run: npm run lint
