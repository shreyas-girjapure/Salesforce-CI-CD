# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [master]
  pull_request:
    branches: [master]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  Formatting-and-Verifications:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Cache node_modules to speed up the process
      - name: "Restore node_modules cache"
        id: cache-npm
        uses: actions/cache@v1
        with:
          path: node_modules
          key: npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            npm-${{ env.cache-name }}-
            npm-
      # Install npm dependencies for Prettier and Jest
      - name: "Install npm dependencies"
        if: steps.cache-npm.outputs.cache-hit != 'true'
        run: |
          echo "Installing npm dependencies",
          npm install
      # Prettier formatting
      - name: "Code formatting verification with Prettier"
        run: npm run prettier
      # Lint LWC
      - name: "Lint Lightning Web Components"
        run: npm run lint
  
  Create-Package : 
    runs-on: ubuntu-latest
    needs: Formatting-and-Verifications
    steps:
      # Install Salesforce CLI
      - name: 'Install Salesforce CLI'
        run: |
            wget https://developer.salesforce.com/media/salesforce-cli/sfdx/channels/stable/sfdx-linux-x64.tar.xz
            mkdir ~/sfdx
            tar xJf sfdx-linux-x64.tar.xz -C ~/sfdx --strip-components 1
            echo "$HOME/sfdx/bin" >> $GITHUB_PATH
            ~/sfdx/bin/sfdx version
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: 'Checkout source code'
        uses: actions/checkout@v2
      # Login To ORG      
      - name: Login to org
        id: loginToOrg
        uses : sfdx-actions/setup-sfdx@v1
        with:
          sfdx-auth-url: ${{ secrets.AUTH_SECRET }}
    # Convert Source to metadata
      - name: 'Convert Source'
        id: convertSource
        run: |            
            echo "Coverting source to metadata format"
            echo ${{steps.loginToOrg.outputs}}
            sfdx force:source:convert -d deploy_code
    # Check validate package
      - name: 'Validate package'
        id: validatePackage
        if : steps.convertSource.status == 'success'
        run: |
          sfdx force:mdapi:deploy -d deploy_code -u SFDX-ENV -w 5 -l RunLocalTests
          isValidated = 'true'
      # Running Local Tests
      - name: Runtests  
        if : steps.validatePackage.status == 'success' 
        run : |
          echo ${{steps.validatePackage.outputs}}
           sfdx force:apex:test:run -l RunLocalTests -w 30
